name: Release

on:
  push:
    branches:
      - main

jobs:
  draft_release_notes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Draft Release Notes
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    needs: draft_release_notes
    runs-on: ubuntu-latest
    steps:
      - name: Install zip
        run: sudo apt install zip

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 8.6.1

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          cache: 'pnpm'
          cache-dependency-path: 'web/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install
        working-directory: web

      - name: Build
        run: pnpm build
        working-directory: web
        env:
          CI: false

      - name: Bump manifest version
        run: node .github/actions/bump-manifest-version.js

      - name: Commit bumped manifest
        uses: EndBug/add-and-commit@v8
        with:
          add: fxmanifest.lua
          push: true
          author_name: Manifest Bumper
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: 'chore: bump manifest version to ${{ env.NEW_VERSION }}'

      # Create and push tag for new version
      - name: Create git tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release v${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Bundle files
        run: |
          mkdir -p ./temp/dirk_lib/web/
          cp ./fxmanifest.lua ./init.lua ./README.md ./LICENSE ./temp/dirk_lib/
          cp -r ./src ./bridge ./locales ./modules ./temp/dirk_lib/
          cp -r ./web/build ./temp/dirk_lib/web/
          cd ./temp && zip -r ../dirk_lib.zip ./dirk_lib

      - id: create_release
        name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.NEW_VERSION }}"
          name: "Release v${{ env.NEW_VERSION }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dirk_lib.zip
          asset_name: dirk_lib.zip
          asset_content_type: application/zip
